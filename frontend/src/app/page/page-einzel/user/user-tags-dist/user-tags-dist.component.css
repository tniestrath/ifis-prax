.user-tags-dist-box{
  margin-top: 55px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  height: calc(100% - 55px) !important;
}
.user-tags-dist-title{
  display: flex;
  width: calc(100% - 10px);
  height: 30px;
  position: relative;
  box-sizing: border-box;
  border-radius: 5px;
  border: 1px solid #A0A0A0;
  left: 5px;
  right: 5px;
  top: 5px;

}
.user-tags-dist-title > p{
  margin: 0;
  padding: 5px 15px;
  text-align: center;
}
.user-tags-dist-selector-container{
  margin-left: 5px;
  height: calc(100% - 50px);
  width: calc(100% - 8px);
}
#shadow {
  position: relative;
  left: 5px;
  top: -8px;
  width: calc(100% - 17px);
  height: 10px;
  box-shadow: inset 0 -10px 10px -10px #EEE;
  border-radius: 5px;
}
.user-tags-dist-selector-container dash-selector{
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}

public JSONArray getUserCountForAllTags() throws JSONException {
                                            List<String> allTags = wpUserMetaRepository.getAllTags();
                                            List<String> decryptedAndCleanedTags= cleanTags(decryptTags(allTags));
                                            int totalUsersWithTag = wpUserMetaRepository.getTotalCountOfUsersWithTag();

                                            JSONArray result = new JSONArray();

for (String tag : decryptedAndCleanedTags) {
  int count = wpUserMetaRepository.countUsersByTag(tag);
  result.put(new JSONObject().put("name", tag).put("count", count).put("precantage", (double) count / totalUsersWithTag * 100).put("id", termRepo.findBySlug(tag).getId()));
}
return result;
}
